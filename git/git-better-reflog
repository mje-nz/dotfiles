#!/usr/bin/env zsh
# Massage the output from git reflog into a more helpful format:
# * Display both index-format (master@{0}) and timestamp-format
#   (master@{1 minute ago}) reflog designators.
# * TODO
#
# Author: Matthew Edwards

emulate -L zsh
setopt RE_MATCH_PCRE

# Pretty reflog command prefixed with bare commit hash
main_reflog=(git reflog --color "--format=%h %Cred%gd%C(auto): %h %gs %C(dim)[%s]%C(auto)%d" "@{0}")
# Second reflog command to get timestamp-format designator
extra_reflog=(git reflog "--format=%h %gd" "@{now}")
# Regexes for parsing output
main_regex='(\w+) (.*?master@{\d+}.*?): (.+)'
extra_regex='(\w+) master@{(.*)}'

# Read from both reflog commands line-by-line and combine them
while read -r main <&3 && read -r extra <&4; do
	[[ "$main" =~ $main_regex ]] || return 255
	commit="${match[1]}"; ref="${match[2]}"; body="${match[3]}"
	[[ "$extra" =~ $extra_regex ]] || return 254
	extra_commit="${match[1]}"; extra_time="${match[2]}"
	[[ "$commit" == "$extra_commit" ]] || return 253

    echo "$ref $extra_time: $body"
done 3< <("${main_reflog[@]}") 4< <("${extra_reflog[@]}")
