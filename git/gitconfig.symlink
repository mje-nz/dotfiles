# Local/private config and platform-specific configs go in separate files
[include]
    path = ~/.gitconfig.local
    path = ~/.gitconfig.platform

[alias]
    fullstatus = !$DOTFILES/git/git-fullstatus
    undo = !$DOTFILES/git/git-undo
    latexdiff = !$DOTFILES/thirdparty/git-latexdiff/git-latexdiff
    stash-rename = "!_() { rev=$(git rev-parse $1) && git stash drop $1 || exit 1 ; git stash store -m \"$2\" $rev; }; _"

[branch]
    # When a new branch is created with git branch, git switch or git checkout that
    # tracks another branch, set up pull to rebase instead of merge.
    autoSetupRebase = always

[commit]
    # Show unified diff between the HEAD commit and what would be committed at the
    # bottom of the commit message template to help the user describe the commit
    # by reminding what changes the commit has.
    verbose = true

[core]
    excludesfile = ~/.gitignore
    editor = nano

[diff]
    # Uses a prefix pair that is different from the standard "a/" and "b/" depending
    # on what is being compared (e.g., git diff compares the (i)ndex and the (w)ork
    # tree).
    mnemonicPrefix = true
    # Show full diffs for changes inside submodules.
    submodule = diff

[fetch]
    # Fetch and pull will only recurse into a populated submodule when its superproject
    # retrieves a commit that updates the submodule's reference (default).
    recurseSubmodules = on-demand

[help]
    # Automatically correct and execute mistyped commands after waiting for the
    # given number of deciseconds.  If more than one command can be deduced from
    # the entered text, nothing will be executed.
    autoCorrect = 1

[log]
    # Instead of showing the full 40-byte hexadecimal commit object name, show only
    # a partial prefix.
    abbrevCommit = true
    # When a single <path> is given, continue listing itshistory beyond renames.
    follow = true

[merge]
    # In addition to the <<<<<<<, =======, and >>>>>>> markers, add a ||||||| marker
    # that is followed by the text from the common ancestor.
    conflictStyle = diff3

[pull]
    # Allow only fast-forward merges when pulling (never create a merge commit).
    # https://blog.sffc.xyz/post/185195398930/why-you-should-use-git-pull-ff-only-git-is-a
    ff = only
[push]
    # Set to git 2.0 default to suppress warning message.
    default = simple
    # Verify that all submodule commits that changed in the revisions to be pushed
    # are available on at least one remote of the submodule.
    recurseSubmodules = check

[rerere]
    # Activate recording of resolved conflicts, so that identical conflict hunks
    # can be resolved automatically, should they be encountered again.
    enabled = true
    # Make git-rerere update the index with the resulting contents after it cleanly
    # resolves conflicts using previously recorded resolution.
    autoUpdate = true

[status]
    # Show a summary of commits for modified submodules.
    submoduleSummary = true
    # Show also individual files in untracked directories (might be slower in large
    # repos).
    showUntrackedFiles = all

[submodule]
    # Note that `recurse` overrides fetch.recurseSubmodules and push.recurseSubmodules
    # to on or off!  I've manually set up recursion for clone and checkout in
    # functions/git.

[tag]
    # Sort tags in order of version where possible (e.g., 1.1, 1.2, ..., 1.9, 1.10).
    sort = version:refname

[url "ssh://git@github.com/"]
    # Replace HTTPS GitHub URLs with the SSH equivalent
    insteadOf = https://github.com/

[versionsort]
    # Sort tags with these suffixes first, in this order
    suffix = -pre
    suffix = .pre
    suffix = pre
    suffix = -a
    suffix = .a
    suffix = a
    suffix = -b
    suffix = .b
    suffix = b
    suffix = -rc
    suffix = .rc
    suffix = rc
